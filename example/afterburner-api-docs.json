{
    "openapi": "3.0.1",
    "info":
    {
        "title": "Afterburner API",
        "description": "SpringBoot application to test performance related metrics",
        "license":
        {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "vr2.2.0-SNAPSHOT"
    },
    "externalDocs":
    {
        "description": "Afterburner Documentation",
        "url": "https://github.com/perfana/afterburner"
    },
    "servers":
    [
        {
            "url": "http://localhost:5678",
            "description": "Generated server url"
        }
    ],
    "paths":
    {
        "/log-some":
        {
            "get":
            {
                "tags":
                [
                    "abundant-logger"
                ],
                "summary": "This will log abundantly!",
                "operationId": "logSome",
                "parameters":
                [
                    {
                        "name": "logLines",
                        "in": "query",
                        "required": false,
                        "schema":
                        {
                            "type": "integer",
                            "format": "int32",
                            "default": 10
                        }
                    },
                    {
                        "name": "logSize",
                        "in": "query",
                        "required": false,
                        "schema":
                        {
                            "type": "integer",
                            "format": "int32",
                            "default": 1000
                        }
                    }
                ],
                "responses":
                {
                    "200":
                    {
                        "description": "OK",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/BurnerMessage"
                                }
                            }
                        }
                    }
                }
            },
            "post":
            {
                "tags":
                [
                    "abundant-logger"
                ],
                "summary": "This will log abundantly!",
                "operationId": "logSomeBody",
                "parameters":
                [
                    {
                        "name": "logLines",
                        "in": "query",
                        "required": false,
                        "schema":
                        {
                            "type": "integer",
                            "format": "int32",
                            "default": 10
                        }
                    }
                ],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "type": "string"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "OK",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/BurnerMessage"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/files/upload":
        {
            "post":
            {
                "tags":
                [
                    "file-upload"
                ],
                "description": "Upload a file using multipart/form-data and store in temp directory.",
                "operationId": "upload",
                "requestBody":
                {
                    "content":
                    {
                        "multipart/form-data":
                        {
                            "schema":
                            {
                                "required":
                                [
                                    "upload"
                                ],
                                "type": "object",
                                "properties":
                                {
                                    "upload":
                                    {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses":
                {
                    "200":
                    {
                        "description": "OK",
                        "content":
                        {
                            "*/*":
                            {
                                "schema":
                                {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/basket/store":
        {
            "post":
            {
                "tags":
                [
                    "basket-controller"
                ],
                "description": "Store a purchase in the database.",
                "operationId": "store",
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/BasketRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "OK",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/BasketReply"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/basket/purchase":
        {
            "post":
            {
                "tags":
                [
                    "basket-controller"
                ],
                "summary": "Simulates a basket purchase request with validation. What can possibly go wrong?",
                "operationId": "purchase",
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/BasketRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "OK",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/BasketReply"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tcp/connect":
        {
            "get":
            {
                "tags":
                [
                    "tcp-connector"
                ],
                "summary": "Check connection to remote port. This measures the TCP handshake (socket.connect()) to the remote system.",
                "operationId": "tcpConnect",
                "parameters":
                [
                    {
                        "name": "host",
                        "in": "query",
                        "required": false,
                        "schema":
                        {
                            "type": "string",
                            "default": "localhost"
                        }
                    },
                    {
                        "name": "port",
                        "in": "query",
                        "required": false,
                        "schema":
                        {
                            "type": "integer",
                            "format": "int32",
                            "default": 8080
                        }
                    },
                    {
                        "name": "timeout-ms",
                        "in": "query",
                        "required": false,
                        "schema":
                        {
                            "type": "integer",
                            "format": "int32",
                            "default": 5000
                        }
                    }
                ],
                "responses":
                {
                    "200":
                    {
                        "description": "OK",
                        "content":
                        {
                            "*/*":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/BurnerMessage"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/system-info":
        {
            "get":
            {
                "tags":
                [
                    "system-info-controller"
                ],
                "summary": "Show system info for this jvm, memory, cpu and threads.",
                "operationId": "systemInfo",
                "responses":
                {
                    "200":
                    {
                        "description": "OK",
                        "content":
                        {
                            "*/*":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/SystemInfo"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/serial-stream":
        {
            "get":
            {
                "tags":
                [
                    "go-parallel"
                ],
                "summary": "Calculate the sum of prime numbers, with some additional delay, using a regular (serial) stream.",
                "operationId": "goSerialStream",
                "parameters":
                [
                    {
                        "name": "primeDelayMillis",
                        "in": "query",
                        "required": false,
                        "schema":
                        {
                            "type": "integer",
                            "format": "int32",
                            "default": 5
                        }
                    },
                    {
                        "name": "maxPrime",
                        "in": "query",
                        "required": false,
                        "schema":
                        {
                            "type": "integer",
                            "format": "int64",
                            "default": 10000
                        }
                    }
                ],
                "responses":
                {
                    "200":
                    {
                        "description": "OK",
                        "content":
                        {
                            "*/*":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/BurnerMessage"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/secured-delay":
        {
            "get":
            {
                "tags":
                [
                    "secured-delay"
                ],
                "summary": "The secured delay call does a simple java sleep in request thread for 'duration' milliseconds.",
                "operationId": "delay",
                "parameters":
                [
                    {
                        "name": "duration",
                        "in": "query",
                        "required": false,
                        "schema":
                        {
                            "type": "string",
                            "default": "100"
                        }
                    }
                ],
                "responses":
                {
                    "200":
                    {
                        "description": "OK",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/BurnerMessage"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/request-scope":
        {
            "get":
            {
                "tags":
                [
                    "request-scope-controller"
                ],
                "summary": "Check request scope behaviour",
                "operationId": "delay_1",
                "parameters":
                [
                    {
                        "name": "duration",
                        "in": "query",
                        "required": false,
                        "schema":
                        {
                            "type": "string",
                            "default": "100"
                        }
                    }
                ],
                "responses":
                {
                    "200":
                    {
                        "description": "OK",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/BurnerMessage"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/remote/call":
        {
            "get":
            {
                "tags":
                [
                    "remote-call-controller"
                ],
                "summary": "Call one remote service.",
                "operationId": "remoteCallHttpClient",
                "parameters":
                [
                    {
                        "name": "path",
                        "in": "query",
                        "required": false,
                        "schema":
                        {
                            "type": "string",
                            "default": "/delay"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "required": false,
                        "schema":
                        {
                            "type": "string",
                            "default": "httpclient"
                        }
                    }
                ],
                "responses":
                {
                    "200":
                    {
                        "description": "OK",
                        "content":
                        {
                            "*/*":
                            {
                                "schema":
                                {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/remote/call-traffic-light":
        {
            "get":
            {
                "tags":
                [
                    "remote-call-controller"
                ],
                "summary": "Call traffic light with retries.",
                "operationId": "remoteCallTrafficLightWithRetries",
                "responses":
                {
                    "200":
                    {
                        "description": "OK",
                        "content":
                        {
                            "*/*":
                            {
                                "schema":
                                {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/remote/call-retry":
        {
            "get":
            {
                "tags":
                [
                    "remote-call-controller"
                ],
                "summary": "Call remote service with retries.",
                "operationId": "remoteCallWithRetries",
                "parameters":
                [
                    {
                        "name": "path",
                        "in": "query",
                        "required": false,
                        "schema":
                        {
                            "type": "string",
                            "default": "/flaky"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "required": false,
                        "schema":
                        {
                            "type": "string",
                            "default": "httpclient"
                        }
                    }
                ],
                "responses":
                {
                    "200":
                    {
                        "description": "OK",
                        "content":
                        {
                            "*/*":
                            {
                                "schema":
                                {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/remote/call-many":
        {
            "get":
            {
                "tags":
                [
                    "remote-call-controller"
                ],
                "summary": "Call many remote services in parallel using CompletableFutures.",
                "operationId": "remoteCallHttpClientMany",
                "parameters":
                [
                    {
                        "name": "path",
                        "in": "query",
                        "required": false,
                        "schema":
                        {
                            "type": "string",
                            "default": "/delay?duration=33"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "required": false,
                        "schema":
                        {
                            "type": "string",
                            "default": "httpclient"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "schema":
                        {
                            "type": "integer",
                            "format": "int32",
                            "default": 3
                        }
                    }
                ],
                "responses":
                {
                    "200":
                    {
                        "description": "OK",
                        "content":
                        {
                            "*/*":
                            {
                                "schema":
                                {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/remote/call-circuit-breaker":
        {
            "get":
            {
                "tags":
                [
                    "remote-call-controller"
                ],
                "summary": "Call remote service with circuit breaker.",
                "operationId": "remoteCallWithCircuitBreaker",
                "parameters":
                [
                    {
                        "name": "path",
                        "in": "query",
                        "required": false,
                        "schema":
                        {
                            "type": "string",
                            "default": "/delay"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "required": false,
                        "schema":
                        {
                            "type": "string",
                            "default": "httpclient"
                        }
                    }
                ],
                "responses":
                {
                    "200":
                    {
                        "description": "OK",
                        "content":
                        {
                            "*/*":
                            {
                                "schema":
                                {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/parallel":
        {
            "get":
            {
                "tags":
                [
                    "go-parallel"
                ],
                "summary": "Calculate the sum of prime numbers, with some additional delay, using parallel stream (common fork join pool).",
                "operationId": "goParallel",
                "parameters":
                [
                    {
                        "name": "primeDelayMillis",
                        "in": "query",
                        "required": false,
                        "schema":
                        {
                            "type": "integer",
                            "format": "int32",
                            "default": 2
                        }
                    },
                    {
                        "name": "maxPrime",
                        "in": "query",
                        "required": false,
                        "schema":
                        {
                            "type": "integer",
                            "format": "int32",
                            "default": 10000
                        }
                    }
                ],
                "responses":
                {
                    "200":
                    {
                        "description": "OK",
                        "content":
                        {
                            "*/*":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/BurnerMessage"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/parallel-info":
        {
            "get":
            {
                "tags":
                [
                    "go-parallel"
                ],
                "summary": "Show current information of the common fork join pool.",
                "operationId": "parallelInfo",
                "responses":
                {
                    "200":
                    {
                        "description": "OK",
                        "content":
                        {
                            "*/*":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/ParallelInfo"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/mind-my-business":
        {
            "get":
            {
                "tags":
                [
                    "mind-my-business"
                ],
                "summary": "Mind my business for 'duration' milliseconds.",
                "operationId": "mindMyBusiness",
                "parameters":
                [
                    {
                        "name": "duration",
                        "in": "query",
                        "required": false,
                        "schema":
                        {
                            "type": "string",
                            "default": "5"
                        }
                    }
                ],
                "responses":
                {
                    "200":
                    {
                        "description": "OK",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/BurnerMessage"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/mind-my-business-s":
        {
            "get":
            {
                "tags":
                [
                    "mind-my-business"
                ],
                "summary": "Mind my business for 'duration' milliseconds.",
                "operationId": "mindMyBusinesss",
                "parameters":
                [
                    {
                        "name": "duration",
                        "in": "query",
                        "required": false,
                        "schema":
                        {
                            "type": "string",
                            "default": "5"
                        }
                    }
                ],
                "responses":
                {
                    "200":
                    {
                        "description": "OK",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/BurnerMessage"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/memory/grow":
        {
            "get":
            {
                "tags":
                [
                    "memory-leak"
                ],
                "summary": "Simulate a memory leak.",
                "operationId": "memoryGrow",
                "parameters":
                [
                    {
                        "name": "objects",
                        "in": "query",
                        "required": false,
                        "schema":
                        {
                            "type": "integer",
                            "format": "int32",
                            "default": 10
                        }
                    },
                    {
                        "name": "items",
                        "in": "query",
                        "required": false,
                        "schema":
                        {
                            "type": "integer",
                            "format": "int32",
                            "default": 9
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema":
                        {
                            "type": "integer",
                            "format": "int32",
                            "default": 100
                        }
                    }
                ],
                "responses":
                {
                    "200":
                    {
                        "description": "OK",
                        "content":
                        {
                            "*/*":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/BurnerMessage"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/memory/clear":
        {
            "get":
            {
                "tags":
                [
                    "memory-leak"
                ],
                "summary": "Clear the memory leak.",
                "operationId": "memoryClear",
                "responses":
                {
                    "200":
                    {
                        "description": "OK",
                        "content":
                        {
                            "*/*":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/BurnerMessage"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/memory/churn":
        {
            "get":
            {
                "tags":
                [
                    "memory-churn"
                ],
                "summary": "Simulate high object churn: lots of objects created per request.",
                "operationId": "delay_2",
                "parameters":
                [
                    {
                        "name": "objects",
                        "in": "query",
                        "required": false,
                        "schema":
                        {
                            "type": "integer",
                            "format": "int32",
                            "default": 181
                        }
                    },
                    {
                        "name": "duration",
                        "in": "query",
                        "required": false,
                        "schema":
                        {
                            "type": "string",
                            "default": "100"
                        }
                    }
                ],
                "responses":
                {
                    "200":
                    {
                        "description": "OK",
                        "content":
                        {
                            "*/*":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/BurnerMessage"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/fund/check":
        {
            "get":
            {
                "tags":
                [
                    "fund-check-controller"
                ],
                "description": "Check funds for customer.",
                "operationId": "checkFund",
                "parameters":
                [
                    {
                        "name": "customer",
                        "in": "query",
                        "required": true,
                        "schema":
                        {
                            "type": "string"
                        }
                    },
                    {
                        "name": "amount",
                        "in": "query",
                        "required": true,
                        "schema":
                        {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses":
                {
                    "200":
                    {
                        "description": "OK",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/FundReply"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/flaky":
        {
            "get":
            {
                "tags":
                [
                    "flaky-service"
                ],
                "summary": "The flaky call fails most of the time.",
                "operationId": "flaky",
                "parameters":
                [
                    {
                        "name": "flakiness",
                        "in": "query",
                        "description": "Percentage of flakiness. Will throw an exception this many times out of a 100 calls.",
                        "required": false,
                        "schema":
                        {
                            "type": "integer",
                            "format": "int32",
                            "default": 50
                        }
                    },
                    {
                        "name": "maxRandomDelay",
                        "in": "query",
                        "description": "If -1 a 20 millisecond sleep is done, otherwise a random sleep till maxRandomDelay in millis. Allowed: -1 to infinity (well, max Java int)",
                        "required": false,
                        "schema":
                        {
                            "type": "integer",
                            "format": "int32",
                            "default": -1
                        }
                    }
                ],
                "responses":
                {
                    "200":
                    {
                        "description": "OK",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/BurnerMessage"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/files/download/{filename}":
        {
            "get":
            {
                "tags":
                [
                    "file-upload"
                ],
                "summary": "Download a file.",
                "description": "Download an already uploaded file by name.",
                "operationId": "serveFile",
                "parameters":
                [
                    {
                        "name": "filename",
                        "in": "path",
                        "required": true,
                        "schema":
                        {
                            "type": "string"
                        }
                    }
                ],
                "responses":
                {
                    "200":
                    {
                        "description": "OK",
                        "content":
                        {
                            "*/*":
                            {
                                "schema":
                                {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/error":
        {
            "get":
            {
                "tags":
                [
                    "error-page"
                ],
                "operationId": "error",
                "responses":
                {
                    "200":
                    {
                        "description": "OK",
                        "content":
                        {
                            "*/*":
                            {
                                "schema":
                                {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/delay":
        {
            "get":
            {
                "tags":
                [
                    "delay"
                ],
                "summary": "The delay call does a simple java sleep in request thread for 'duration' milliseconds.",
                "operationId": "delay_3",
                "parameters":
                [
                    {
                        "name": "duration",
                        "in": "query",
                        "required": false,
                        "schema":
                        {
                            "type": "string",
                            "default": "100"
                        }
                    }
                ],
                "responses":
                {
                    "200":
                    {
                        "description": "OK",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/BurnerMessage"
                                }
                            }
                        }
                    }
                },
                "x-performance":
                {
                    "response-time-millis": "100"
                }
            }
        },
        "/delay-limited":
        {
            "get":
            {
                "tags":
                [
                    "delay"
                ],
                "summary": "The delay call does a simple java sleep in request thread for 'duration' milliseconds. Use limited number of threads via Semaphore.",
                "operationId": "delayLimited",
                "parameters":
                [
                    {
                        "name": "duration",
                        "in": "query",
                        "required": false,
                        "schema":
                        {
                            "type": "string",
                            "default": "100"
                        }
                    }
                ],
                "responses":
                {
                    "200":
                    {
                        "description": "OK",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/BurnerMessage"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cpu/magic-identity-check":
        {
            "get":
            {
                "tags":
                [
                    "cpu-burner"
                ],
                "summary": "Spend some time on CPU doing some magic matrix calculations.",
                "operationId": "magicIdentityCheck",
                "parameters":
                [
                    {
                        "name": "matrixSize",
                        "in": "query",
                        "required": false,
                        "schema":
                        {
                            "type": "integer",
                            "format": "int32",
                            "default": 10
                        }
                    }
                ],
                "responses":
                {
                    "200":
                    {
                        "description": "OK",
                        "content":
                        {
                            "*/*":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/BurnerMessage"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/basket/all":
        {
            "get":
            {
                "tags":
                [
                    "basket-controller"
                ],
                "description": "Store a purchase in the database.",
                "operationId": "all",
                "responses":
                {
                    "200":
                    {
                        "description": "OK",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/BasketListReply"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/async/exception":
        {
            "get":
            {
                "tags":
                [
                    "asyn-exception-controller"
                ],
                "summary": "Call CompletableFuture with timeout and exceptions.",
                "operationId": "asyncException",
                "parameters":
                [
                    {
                        "name": "sleepMillis",
                        "in": "query",
                        "required": false,
                        "schema":
                        {
                            "type": "integer",
                            "format": "int64",
                            "default": 2000
                        }
                    },
                    {
                        "name": "doException",
                        "in": "query",
                        "required": false,
                        "schema":
                        {
                            "type": "boolean",
                            "default": true
                        }
                    }
                ],
                "responses":
                {
                    "200":
                    {
                        "description": "OK",
                        "content":
                        {
                            "*/*":
                            {
                                "schema":
                                {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/":
        {
            "get":
            {
                "tags":
                [
                    "root-controller"
                ],
                "summary": "Welcome to afterburner.",
                "operationId": "welcome",
                "responses":
                {
                    "200":
                    {
                        "description": "OK",
                        "content":
                        {
                            "text/html":
                            {
                                "schema":
                                {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components":
    {
        "schemas":
        {
            "BurnerMessage":
            {
                "type": "object",
                "properties":
                {
                    "message":
                    {
                        "type": "string"
                    },
                    "name":
                    {
                        "type": "string"
                    },
                    "durationInMillis":
                    {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "BasketRequest":
            {
                "type": "object",
                "properties":
                {
                    "products":
                    {
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "prices":
                    {
                        "type": "array",
                        "items":
                        {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    "totalPrice":
                    {
                        "type": "integer",
                        "format": "int64"
                    },
                    "customer":
                    {
                        "type": "string"
                    }
                }
            },
            "BasketReply":
            {
                "type": "object",
                "properties":
                {
                    "message":
                    {
                        "type": "string"
                    },
                    "totalAmount":
                    {
                        "type": "integer",
                        "format": "int64"
                    },
                    "customer":
                    {
                        "type": "string"
                    }
                }
            },
            "SystemInfo":
            {
                "type": "object",
                "properties":
                {
                    "availableProcessors":
                    {
                        "type": "integer",
                        "format": "int32"
                    },
                    "maxMemory":
                    {
                        "type": "integer",
                        "format": "int64"
                    },
                    "freeMemory":
                    {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalMemory":
                    {
                        "type": "integer",
                        "format": "int64"
                    },
                    "threads":
                    {
                        "type": "integer",
                        "format": "int32"
                    },
                    "threadNames":
                    {
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    }
                }
            },
            "ParallelInfo":
            {
                "type": "object",
                "properties":
                {
                    "name":
                    {
                        "type": "string"
                    },
                    "activeThreadCount":
                    {
                        "type": "integer",
                        "format": "int32"
                    },
                    "parallelism":
                    {
                        "type": "integer",
                        "format": "int32"
                    },
                    "asyncMode":
                    {
                        "type": "boolean"
                    },
                    "poolSize":
                    {
                        "type": "integer",
                        "format": "int32"
                    },
                    "queuedSubmissionCount":
                    {
                        "type": "integer",
                        "format": "int32"
                    },
                    "queuedTaskCount":
                    {
                        "type": "integer",
                        "format": "int64"
                    },
                    "runningThreadCount":
                    {
                        "type": "integer",
                        "format": "int32"
                    },
                    "stealCount":
                    {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "FundReply":
            {
                "type": "object",
                "properties":
                {
                    "customer":
                    {
                        "type": "string"
                    },
                    "totalAmount":
                    {
                        "type": "integer",
                        "format": "int64"
                    },
                    "hasSufficientFunds":
                    {
                        "type": "boolean"
                    }
                }
            },
            "Basket":
            {
                "type": "object",
                "properties":
                {
                    "id":
                    {
                        "type": "integer",
                        "format": "int64"
                    },
                    "prices":
                    {
                        "type": "string"
                    },
                    "products":
                    {
                        "type": "string"
                    },
                    "totalPrice":
                    {
                        "type": "integer",
                        "format": "int64"
                    },
                    "customer":
                    {
                        "type": "string"
                    }
                }
            },
            "BasketListReply":
            {
                "type": "object",
                "properties":
                {
                    "baskets":
                    {
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/Basket"
                        }
                    }
                }
            }
        }
    }
}